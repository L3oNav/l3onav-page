{"ast":null,"code":"var _jsxFileName = \"/home/l3onav/Projects/Js/l3onav-page/src/hooks/language.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Languages } from \"../contexts/languages.context\";\nimport React, { useState, useLayoutEffect } from \"react\";\nvar LangContext = /*#__PURE__*/React.createContext({\n  lang: \"\",\n  currentLangData: {},\n  switchLang: function switchLang() {}\n});\nexport default LangContext;\nexport var LangProvider = function LangProvider(props) {\n  _s();\n\n  var _useState = useState(\"en-US\"),\n      lang = _useState[0],\n      setLang = _useState[1];\n\n  useLayoutEffect(function () {\n    var selectedLang = window.localStorage.getItem(\"appUILang\");\n\n    if (selectedLang) {\n      setLang(selectedLang);\n    }\n  }, [lang]);\n\n  var switchLang = function switchLang(ln) {\n    setLang(ln);\n    window.localStorage.setItem(\"appUILang\", ln);\n  };\n\n  return __jsx(LangContext.Provider, {\n    value: {\n      lang: lang,\n      switchLang: switchLang,\n      currentLangData: Languages[lang]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\n_s(LangProvider, \"vVBauyEs6bkfxzqxpR7V1C+/Amc=\");\n\n_c = LangProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"LangProvider\");","map":{"version":3,"sources":["/home/l3onav/Projects/Js/l3onav-page/src/hooks/language.js"],"names":["Languages","React","useState","useLayoutEffect","LangContext","createContext","lang","currentLangData","switchLang","LangProvider","props","setLang","selectedLang","window","localStorage","getItem","ln","setItem","children"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,+BAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,eAA1B,QAAiD,OAAjD;AAEA,IAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACtCC,EAAAA,IAAI,EAAE,EADgC;AAEtCC,EAAAA,eAAe,EAAE,EAFqB;AAGtCC,EAAAA,UAAU,EAAE,sBAAM,CAAE;AAHkB,CAApB,CAApB;AAMA,eAAeJ,WAAf;AAEA,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACbR,QAAQ,CAAC,OAAD,CADK;AAAA,MAC9BI,IAD8B;AAAA,MACxBK,OADwB;;AAGrCR,EAAAA,eAAe,CAAC,YAAM;AACpB,QAAMS,YAAY,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,CAArB;;AACA,QAAIH,YAAJ,EAAkB;AAChBD,MAAAA,OAAO,CAACC,YAAD,CAAP;AACD;AACF,GALc,EAKZ,CAACN,IAAD,CALY,CAAf;;AAOA,MAAME,UAAU,GAAG,SAAbA,UAAa,CAACQ,EAAD,EAAQ;AACzBL,IAAAA,OAAO,CAACK,EAAD,CAAP;AACAH,IAAAA,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,WAA5B,EAAyCD,EAAzC;AACD,GAHD;;AAIA,SACE,MAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLV,MAAAA,IAAI,EAAJA,IADK;AAELE,MAAAA,UAAU,EAAVA,UAFK;AAGLD,MAAAA,eAAe,EAAEP,SAAS,CAACM,IAAD;AAHrB,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGI,KAAK,CAACQ,QAPT,CADF;AAWD,CAzBM;;GAAMT,Y;;KAAAA,Y","sourcesContent":["import { Languages } from \"../contexts/languages.context\";\nimport React, { useState, useLayoutEffect } from \"react\";\n\nconst LangContext = React.createContext({\n  lang: \"\",\n  currentLangData: {},\n  switchLang: () => {},\n});\n\nexport default LangContext;\n\nexport const LangProvider = (props) => {\n  const [lang, setLang] = useState(\"en-US\");\n\n  useLayoutEffect(() => {\n    const selectedLang = window.localStorage.getItem(\"appUILang\");\n    if (selectedLang) {\n      setLang(selectedLang);\n    }\n  }, [lang]);\n\n  const switchLang = (ln) => {\n    setLang(ln);\n    window.localStorage.setItem(\"appUILang\", ln);\n  };\n  return (\n    <LangContext.Provider\n      value={{\n        lang,\n        switchLang,\n        currentLangData: Languages[lang],\n      }}\n    >\n      {props.children}\n    </LangContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}